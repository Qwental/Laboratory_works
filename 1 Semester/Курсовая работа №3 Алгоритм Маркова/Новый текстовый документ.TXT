Курсовая работа по курсу 
«Фундаментальная информатика»
1 семестр
«Работа с Машиной Тьюринга»
Бугренков Владимир Петрович
М80-111Б-23
Москва, 09.10.2023

1.	Постановка задания
Вычисление логического произведения (&& в Си) двоичных чисел на Машине Тьюринга. (1 вариант)

2.	Общий метод решения
Поочерёдно справа налево проверяем число на равенство 0. Если первое число равно 0, то логическое произведение данных двух чисел точно равно 0, поэтому выводим 0 и заканчиваем работу программы. Если первое число не равно 0, начинаем аналогичную проверку второго числа. Если второе число равно 0, значит логическое произведение точно равно нулю, выводим 0 и завершаем работу программы. Если оба числа не равны 0, выводим 1 и завершаем работу программы.

3.	Общие сведения о программе
Программа выполнялась на эмуляторе машины Тьюринга jstu4. Выполнение отчёта происходило при помощи инструмента turun и операционной системы семейства Unix Ubuntu версии 23.04.




4.	Ограничения на объём и величину обрабатываемых данных.
Объём и величина обрабатываемых данных не ограничены. Входные данные должны быть записаны в двоичной системе счисления.

5.	Описание логической структуры
Назовём левое число вторым, а правое первым.
1)	Поразрядная проверка первого числа на равенство 0. Если все цифры первого числа равны 0, то есть всё число равно 0, идём в конец первого числа и выводим 0. Если хотя бы в одном разряде встретилась 1, то число не будет равно 0. Нам не нужно проверять оставшиеся разряды, и мы просто переходим в начало первого числа.
2)	Если первое число не равно нулю, нужно проверить второе число на равенство нулю. Делаем поразрядную проверку второго числа на равенство 0. Если все цифры второго числа равны 0, то есть всё число равно 0, идём в конец первого числа и выводим 0. Если хотя бы в одном разряде встретилась 1, то число не будет равно 0. Нам не нужно проверять оставшиеся разряды. Переходим в конец первого числа и выводим 1.

6.	Описание подпрограмм
Подпрограмм нет.

7.	Входные данные
На вход подаётся пробел, первое число в двоичной системе счисления, пробел и второе число также в двоичной системе счисления.

8.	Выходные данные
0 или 1
9.	Тестовые примеры
10101010 01010101010  
0000 101010101010 
100000 000000000000 
0000000 000000
1110000001 11111111 
000110000 0000100 
0 0 
 0 1
1	0 
2	1 

   10. Дневник отладки

10.	Протокол
root@KotlasBoy:/mnt/c/torun# ./turun mt.tu test.tst
00, ,<,01     03,0,<,03     05, ,0,06     08,1,>,08     10,0,>,10
01,1,<,02     03,1,<,02     06,0,>,12     08, ,>,04     10, ,>,11
01,0,<,03     03, ,>,04     07,0,<,07     09,0,>,09     11, ,1,11
02,0,<,02     04,1,>,04     07,1,>,09     09,1,>,09     11,1,>,12
02,1,<,02     04,0,>,04     07, ,>,08     09, ,>,10     12, , ,12
02, ,<,07     04, ,>,05     08,0,>,08     10,1,>,10
 10101010 01010101010                                                         =>
 10101010 01010101010 1                                                       =>
 10101010 01010101010 1
Machine stopped successfully
 0000 101010101010                                                            =>
 0000 101010101010 0                                                          =>
 0000 101010101010 0
Machine stopped successfully
 100000 000000000000                                                          =>
 100000 000000000000 0                                                        =>
 100000 000000000000 0
Machine stopped successfully
 0000000 000000                                                               =>
 0000000 000000 0                                                             =>
 0000000 000000 0
Machine stopped successfully
 1110000001 11111111                                                          =>
 1110000001 11111111 1                                                        =>
 1110000001 11111111 1
Machine stopped successfully
 000110000 0000100                                                            =>
 000110000 0000100 1                                                          =>
 000110000 0000100 1
Machine stopped successfully
 0 0                                                                          =>
 0 0 0                                                                        =>
 0 0 0
Machine stopped successfully
 0 1                                                                          =>
 0 1 0                                                                        =>
 0 1 0
Machine stopped successfully
 1 0                                                                          =>
 1 0 0                                                                        =>
 1 0 0
Machine stopped successfully
 1 1                                                                          =>
 1 1 1                                                                        =>
 1 1 1
Machine stopped successfully

11.	Выводы по задаче.
Поставленная цель достигнута, в процессе выполнения были получены крайне важные алгоритмические знания. Замечаний по существу работы нет, Недочётов не было.


















